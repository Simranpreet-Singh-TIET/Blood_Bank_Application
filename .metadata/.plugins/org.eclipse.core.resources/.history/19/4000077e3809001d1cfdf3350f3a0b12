package bloodunit;


import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;


import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.ComboBox;
import javafx.scene.control.DatePicker;
import javafx.scene.control.TextField;

import javafx.scene.control.Alert.AlertType;

public class BloodUnitViewController 
{

    @FXML
    private ResourceBundle resources;

    @FXML
    private URL location;

    @FXML
    private TextField bg;

    @FXML
    private ComboBox<String> mobile;

    @FXML
    private DatePicker rdate;
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    final ObservableList<Object> options = FXCollections.observableArrayList();

    void showMsg(String msg)
    {
    	Alert alert=new Alert(AlertType.INFORMATION);
    	alert.setTitle("Title");
    	alert.setContentText(msg);
    	alert.show();
    }
    void clear()
    {
    	mobile.getEditor().setText("");
    	bg.setText("");
    	rdate.getEditor().setText("");
    	
    }
   
    List<String> getdata()
    {
    	List<String> options = new ArrayList<>();
    	
    	try
    	{
    		pst=con.prepareStatement("select mobile from donors ");
    		rs=pst.executeQuery();
    		while(rs.next())
    		{
    			options.add(rs.getString("mobile"));
    		}
    	}
    	catch(Exception e)
    	{
    		
    		
    	}
    	return options;
    }
    @FXML
    void do_clear(ActionEvent event) {

    }
    
    boolean search(String mob)
    {
    	boolean j=false;
    	try
    	{
    		pst=con.prepareStatement("select * from donors where mobile = ?");
    		pst.setString(1, mob);
    		rs=pst.executeQuery();
    		while(rs.next()) 
    		{
    			j=true;
    			bg.setText(rs.getString("bgroup"));
    		}
    	}
    	catch(Exception e)
    	{
    		showMsg("Not Run");
    	}
    	return j;
    }
    @FXML
    void do_search(ActionEvent event) 
    {
    	String m= mobile.getValue();
    	
    	
    	if(search(m)==false)
    	{
    		showMsg("No Donor Avialable");
    		clear();
    		
    	}
    }

    @FXML
    void do_upload(ActionEvent event) 
    {
    	
        mobile.setItems(FXCollections.observableArrayList(getdata()));

    }

    @FXML
    void initialize() {
       
    	
    }

}
